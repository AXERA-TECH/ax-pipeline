# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: prepare 3rdparty
        run: |
          git submodule update --init

      # Runs a set of commands using the runners shell
      - name: build for ax620
        run: |
          mkdir build
          cd build

          ../download_ax_bsp.sh ax620

          wget https://github.com/AXERA-TECH/ax-samples/releases/download/v0.1/opencv-arm-linux-gnueabihf-gcc-7.5.0.zip
          unzip opencv-arm-linux-gnueabihf-gcc-7.5.0.zip

          wget http://releases.linaro.org/components/toolchain/binaries/7.5-2019.12/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
          tar -xf gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
          export PATH=$PATH:gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf/bin/
          arm-linux-gnueabihf-gcc -v

          cmake -DAXERA_TARGET_CHIP=AX620A -DBSP_MSP_DIR=$PWD/axpi_bsp_sdk/msp/out -DOpenCV_DIR=$PWD/opencv-arm-linux/lib/cmake/opencv4 -DCMAKE_TOOLCHAIN_FILE=../toolchains/arm-linux-gnueabihf.toolchain.cmake -DCMAKE_INSTALL_PREFIX=install -DSIPY_BUILD=ON ..
          make -j8
          make install
      - name: build for ax650
        run: |
          mkdir build_650
          cd build_650

          ../download_ax_bsp.sh ax650
          cd ax650n_bsp_sdk
          wget https://github.com/ZHEQIUSHUI/assets/releases/download/ax650/drm.zip
          wget https://github.com/ZHEQIUSHUI/assets/releases/download/ax650/libexif.zip
          mkdir third-party
          unzip drm.zip -d third-party
          unzip libexif.zip -d third-party
          cd ..

          wget https://github.com/ZHEQIUSHUI/assets/releases/download/ax650/libopencv-4.5.5-aarch64.zip
          unzip libopencv-4.5.5-aarch64.zip

          wget https://developer.arm.com/-/media/Files/downloads/gnu-a/9.2-2019.12/binrel/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xf gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz
          export PATH=$PATH:$PWD/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu/bin/
          aarch64-none-linux-gnu-gcc -v

          cmake -DAXERA_TARGET_CHIP=AX650 -DBSP_MSP_DIR=$PWD/ax650n_bsp_sdk/msp/out -DOpenCV_DIR=$PWD/libopencv-4.5.5-aarch64/lib/cmake/opencv4 -DCMAKE_TOOLCHAIN_FILE=../toolchains/aarch64-none-linux-gnu.toolchain.cmake -DCMAKE_INSTALL_PREFIX=install -DSIPY_BUILD=OFF ..
          make -j8
          make install
